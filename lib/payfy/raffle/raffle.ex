defmodule Payfy.Raffle do
  use Ecto.Schema
  import Ecto.Changeset

  alias Payfy.User

  # @primary_key {:id, Ecto.UUID, autogenerated: true}
  schema "raffles" do
    field :name, :string
    field :limit_date, :date

    many_to_many :users,
                 User,
                 join_through: "user_raffle",
                 on_replace: :delete
  end

  @required_attrs [:name, :limit_date]
  @castable_fields [:name, :limit_date]

  def create_changeset(attrs) do
    %__MODULE__{}
    |> cast(attrs, @castable_fields)
    |> validate_required(@required_attrs)
  end

  def join_ruffle(user_id, changeset) do
    cast(changeset, %{user_id: user_id}, [:user_id])
  end

  def define_winner() do

  end
end
